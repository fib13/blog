[{"uri":"https://www.shisanshiji.com/learn-notes/html/","title":"HTML","tags":null,"description":"","content":"入门到放弃还是从入门到入土。 HTML 教程笔记    "},{"uri":"https://www.shisanshiji.com/learn-notes/css/css/","title":"HTML 元素","tags":null,"description":"","content":"HTML 文档是由 HTML 元素定义的。 "},{"uri":"https://www.shisanshiji.com/learn-notes/html/html-tutorial/","title":"HTML 教程笔记","tags":null,"description":"","content":" HTML Attributes  The href Attrribute The src Attribute The width and height Atrributes The alt Attribute The style Attribute The title Attribute   HTML Headings  HTML Headings Bigger Headings   HTML Paragraphs  HTML Paragraphs THML Horizontal Rules HTML Line Breaks The Poem Problem   HTML Styles  Syntax Backgroud Color Text Color Fonts Text Size Text Alignment   HTML Formatting  HTML \u0026lt;b\u0026gt; and \u0026lt;strong\u0026gt; Elements HTML \u0026lt;i\u0026gt; and \u0026lt;em\u0026gt; Elements HTML \u0026lt;small\u0026gt; Elements HTML \u0026lt;mark\u0026gt; Elements HTML \u0026lt;del\u0026gt; Element THML \u0026lt;ins\u0026gt; Element THML \u0026lt;sub\u0026gt; Element HTML \u0026lt;sup\u0026gt; Element   HTML Quotation and Citation Element  HTML \u0026lt;blockquote\u0026gt; For Quotations HTML \u0026lt;q\u0026gt; for Short Quotations HTML \u0026lt;abbr\u0026gt; for Abbreviations HTML \u0026lt;address\u0026gt; for Contact HTML \u0026lt;cite\u0026gt; for Work Title HTML \u0026lt;bdo\u0026gt; for Bi-Derectional Override   THML Comments  Hide Content Hide Inline Content   HTML Colors  Colors RGB HEX HSL    HTML Attributes HTML attributes provide additional information about HTML elements. The href Attrribute 十三时记   Copy   \u0026lt;a href=\u0026#34;https://www.shisanshiji.com\u0026#34;\u0026gt;十三时记\u0026lt;/a\u0026gt;    The src Attribute   Copy   \u0026lt;img src=\u0026#34;/img/favicon.png\u0026#34;\u0026gt;    The width and height Atrributes   Copy   \u0026lt;img src=\u0026#34;/img/favicon.png\u0026#34; width=\u0026#34;100\u0026#34; height=\u0026#34;100\u0026#34;\u0026gt;    The alt Attribute   Copy   \u0026lt;img src=\u0026#34;/img/notfound.png\u0026#34; alt=\u0026#34;Favicon\u0026#34;\u0026gt;    The style Attribute 十三时记\n  Copy   \u0026lt;p style=\u0026#34;color:darkorange\u0026#34;\u0026gt;十三时记\u0026lt;/p\u0026gt;    The title Attribute 十三时记\n  Copy   \u0026lt;p title=\u0026#34;个人博客\u0026#34;\u0026gt;十三时记\u0026lt;/p\u0026gt;    HTML Headings HTML headings are titles or subtitles that you want to display on a webpage. HTML Headings 标题 1 标题 2 标题 3 标题 4 标题 5 标题 6   Copy   \u0026lt;h1\u0026gt;标题 1\u0026lt;/h1\u0026gt; \u0026lt;h2\u0026gt;标题 2\u0026lt;/h2\u0026gt; \u0026lt;h3\u0026gt;标题 3\u0026lt;/h3\u0026gt; \u0026lt;h4\u0026gt;标题 4\u0026lt;/h4\u0026gt; \u0026lt;h5\u0026gt;标题 5\u0026lt;/h5\u0026gt; \u0026lt;h6\u0026gt;标题 6\u0026lt;/h6\u0026gt;    Bigger Headings 标题 1   Copy   \u0026lt;h1 sytle=\u0026#34;font-size:60px;\u0026#34;\u0026gt;标题 1\u0026lt;/h1\u0026gt;    HTML Paragraphs A paragraph always starts on a new line, and is usually a block of text. HTML Paragraphs 第一段落。\n第二段落。\n  Copy   \u0026lt;p\u0026gt;第一段落。\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;第二段落。\u0026lt;/p\u0026gt;    THML Horizontal Rules 侠客行（节选） 十步杀一人，千里不留行。\n 事了拂衣去，深藏功与名。\n  Copy   \u0026lt;h1\u0026gt;侠客行（节选）\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;十步杀一人，千里不留行。\u0026lt;/p\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;p\u0026gt;事了拂衣去，深藏功与名。\u0026lt;/p\u0026gt;    HTML Line Breaks 十步\n杀\n一人。\n  Copy   \u0026lt;p\u0026gt;十步\u0026lt;br\u0026gt;杀\u0026lt;br\u0026gt;一人。\u0026lt;/p\u0026gt;    The Poem Problem  十步杀一人， 千里不留行。 事了拂衣去， 深藏功与名。   Copy   \u0026lt;p\u0026gt; 十步杀一人， 千里不留行。 事了拂衣去， 深藏功与名。 \u0026lt;/p\u0026gt;    Solution - The HTML pre Element\n 十步杀一人， 千里不留行。 事了拂衣去， 深藏功与名。    Copy   \u0026lt;pre\u0026gt; 十步杀一人， 千里不留行。 事了拂衣去， 深藏功与名。 \u0026lt;/pre\u0026gt;    HTML Styles The HTML style attribute is used to add styles to an element, such as color, font, size, and more. Syntax \u0026lt;tagname style=\u0026#34;property:value;\u0026#34;\u0026gt; Backgroud Color 可见页面内容背景色 浅蓝色\n   Copy   \u0026lt;div style=\u0026#34;background-color:powderblue;\u0026#34;\u0026gt; \u0026lt;h1\u0026gt;可见页面内容背景色\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;浅蓝色\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt;    注意\n因防止全局渲染，因此将 body 元素换成 div 元素。   标题背景为浅蓝 段落背景为番茄色\n   Copy   \u0026lt;body\u0026gt; \u0026lt;h1 style=\u0026#34;background-color:powderblue;\u0026#34;\u0026gt;标题背景为浅蓝\u0026lt;/h1\u0026gt; \u0026lt;p style=\u0026#34;background-color:tomato;\u0026#34;\u0026gt;段落背景为番茄色\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt;    Text Color 字体蓝色 字体红色\n  Copy   \u0026lt;h1 style=\u0026#34;color:blue;\u0026#34;\u0026gt;字体蓝色\u0026lt;/h1\u0026gt; \u0026lt;p style=\u0026#34;color:red\u0026#34;\u0026gt;字体红色\u0026lt;/p\u0026gt;    Fonts 宋体 仿宋\n  Copy   \u0026lt;h1 style=\u0026#34;font-family:Simsun;\u0026#34;\u0026gt;宋体\u0026lt;/h1\u0026gt; \u0026lt;p style=\u0026#34;font-family:FangSong\u0026#34;\u0026gt;仿宋\u0026lt;/p\u0026gt;    Text Size 字体放大 3 倍 放大 1.6 倍\n  Copy   \u0026lt;h1 style=\u0026#34;font-size:300%\u0026#34;\u0026gt;字体放大 3 倍\u0026lt;/h1\u0026gt; \u0026lt;p style=\u0026#34;font-size:160%\u0026#34;\u0026gt;放大 1.6 倍\u0026lt;/p\u0026gt;    Text Alignment 居中 居右\n  Copy   \u0026lt;h1 style=\u0026#34;text-align:center\u0026#34;\u0026gt;居中\u0026lt;/h1\u0026gt; \u0026lt;p style=\u0026#34;text-align:right\u0026#34;\u0026gt;居右\u0026lt;/p\u0026gt;    HTML Formatting HTML contains several elements for defining text with a special meaning. HTML \u0026lt;b\u0026gt; and \u0026lt;strong\u0026gt; Elements 粗体，没有额外的重要性  重要性文本，以粗体显示   Copy   \u0026lt;b\u0026gt;粗体，没有额外的重要性\u0026lt;/b\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;strong\u0026gt;重要性文本，以粗体显示\u0026lt;/strong\u0026gt;    HTML \u0026lt;i\u0026gt; and \u0026lt;em\u0026gt; Elements 斜体，通常使用在技术术语，或其他语言的短语、思想等  强调文本，以斜体显示   Copy   \u0026lt;i\u0026gt;斜体，通常使用在技术术语，或其他语言的短语、思想等\u0026lt;/i\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;em\u0026gt;强调文本，以斜体显示\u0026lt;/em\u0026gt;    HTML \u0026lt;small\u0026gt; Elements 更小的文本   Copy   \u0026lt;small\u0026gt;更小的文本\u0026lt;/small\u0026gt;    HTML \u0026lt;mark\u0026gt; Elements 标记或突出显示的文本\n  Copy   \u0026lt;p\u0026gt;\u0026lt;mark\u0026gt;标记\u0026lt;/mark\u0026gt;或\u0026lt;mark\u0026gt;突出显示\u0026lt;/mark\u0026gt;的文本\u0026lt;/p\u0026gt;    HTML \u0026lt;del\u0026gt; Element 即将要删除的文本\n  Copy   \u0026lt;p\u0026gt;即将要\u0026lt;del\u0026gt;删除\u0026lt;/del\u0026gt;的文本\u0026lt;/p\u0026gt;    THML \u0026lt;ins\u0026gt; Element 即将要插入的文本\n  Copy   \u0026lt;p\u0026gt;即将要\u0026lt;ins\u0026gt;插入\u0026lt;/ins\u0026gt;的文本\u0026lt;/p\u0026gt;    THML \u0026lt;sub\u0026gt; Element H2O\n  Copy   \u0026lt;p\u0026gt;H\u0026lt;sub\u0026gt;2\u0026lt;/sub\u0026gt;O\u0026lt;/p\u0026gt;    HTML \u0026lt;sup\u0026gt; Element 脚注[1]\n  Copy   \u0026lt;p\u0026gt;脚注\u0026lt;sup\u0026gt;[1]\u0026lt;/sup\u0026gt;\u0026lt;/p\u0026gt;    HTML Quotation and Citation Element HTML \u0026lt;blockquote\u0026gt; For Quotations 引用自《卖油翁》：\n我亦无他，惟手熟尔。    Copy   \u0026lt;p\u0026gt;引用自《卖油翁》：\u0026lt;/p\u0026gt; \u0026lt;blockquote cite=\u0026#34;https://zh.m.wikisource.org/zh-hans/%E8%B3%A3%E6%B2%B9%E7%BF%81\u0026#34;\u0026gt; 我亦无他，惟手熟尔。 \u0026lt;/blockquote\u0026gt;    HTML \u0026lt;q\u0026gt; for Short Quotations 鲁迅说过：愿中国青年都摆脱冷气，只是向上走，不必听自暴自弃者流的话。\n  Copy   \u0026lt;p\u0026gt;鲁迅说过：\u0026lt;q\u0026gt;愿中国青年都摆脱冷气，只是向上走，不必听自暴自弃者流的话。\u0026lt;/q\u0026gt;\u0026lt;/p\u0026gt;    HTML \u0026lt;abbr\u0026gt; for Abbreviations 缩写，将鼠标悬停在上面会显示描述信息。\n  Copy   \u0026lt;p\u0026gt;\u0026lt;abbr title=\u0026#34;此缩写的描述信息\u0026#34;\u0026gt;缩写\u0026lt;/abbr\u0026gt;，将鼠标悬停在上面会显示描述信息。\u0026lt;/p\u0026gt;    HTML \u0026lt;address\u0026gt; for Contact  剑十三\nshisanshiji.com\n中国    Copy   \u0026lt;address\u0026gt; 剑十三\u0026lt;br\u0026gt; shisanshiji.com\u0026lt;br\u0026gt; 中国 \u0026lt;/address\u0026gt;    HTML \u0026lt;cite\u0026gt; for Work Title 齐白石虾图 由齐白石于 1954 年创作。 肖申克的救赎 由弗兰克·德拉邦特导演于 1994 年上映。   Copy   \u0026lt;p\u0026gt;\u0026lt;cite\u0026gt;齐白石虾图\u0026lt;/cite\u0026gt; 由齐白石于 1954 年创作。 \u0026lt;p\u0026gt;\u0026lt;cite\u0026gt;肖申克的救赎\u0026lt;/cite\u0026gt; 由弗兰克·德拉邦特导演于 1994 年上映。    HTML \u0026lt;bdo\u0026gt; for Bi-Derectional Override 这个文本会从右往左写   Copy   \u0026lt;bdo dir=\u0026#34;rtl\u0026#34;\u0026gt;这个文本会从右往左写\u0026lt;/bdo\u0026gt;    THML Comments HTML comments are not displayed in the browser, but they can help document your HTML source code. Hide Content 十三时记\n这里是被注释掉的段落\n-- 无他，惟手熟尔。\n  Copy   \u0026lt;p\u0026gt;十三时记\u0026lt;/p\u0026gt; \u0026lt;!-- \u0026lt;p\u0026gt;这里是被注释掉的段落\u0026lt;/p\u0026gt; --\u0026gt; \u0026lt;p\u0026gt;无他，惟手熟尔。\u0026lt;/p\u0026gt;    十三时记 这里是被注释掉的段落和一张图片：\n-- 无他，惟手熟尔。\n  Copy   \u0026lt;p\u0026gt;十三时记\u0026lt;p\u0026gt; \u0026lt;!-- \u0026lt;p\u0026gt;这里是被注释掉的段落和一张图片：\u0026lt;/p\u0026gt; \u0026lt;img border=\u0026#34;0\u0026#34; src=\u0026#34;/img/favicon.png\u0026#34; alt=\u0026#34;Trulli\u0026#34;\u0026gt; --\u0026gt; \u0026lt;p\u0026gt;无他，惟手熟尔。\u0026lt;/p\u0026gt;    Hide Inline Content 你看不到这两个字\n  Copy   \u0026lt;p\u0026gt;你看不到\u0026lt;!-- 注释 --\u0026gt;这两个字\u0026lt;/p\u0026gt;    HTML Colors Colors 番茄色\n道奇蓝\n暗海藻绿\n  Copy   \u0026lt;p style=\u0026#34;color:Tomato;\u0026#34;\u0026gt;番茄色\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;color:DodgerBlue;\u0026#34;\u0026gt;道奇蓝\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;color:MediumSeaGreen;\u0026#34;\u0026gt;暗海藻绿\u0026lt;/p\u0026gt;    RGB rgb(60, 179, 113)\nrgb(255, 165, 0)\nrgb(106, 90, 205)\nrgb(60, 60, 60)\nrgb(100, 100, 100)\nrgb(140, 140, 140)\nrgb(180, 180, 180)\nrgb(220, 220, 220)\nrgba(255, 99, 71, 0)\nrgba(255, 99, 71, 0.2)\nrgba(255, 99, 71, 0.4)\nrgba(255, 99, 71, 0.6)\nrgba(255, 99, 71, 0.8)\nrgba(255, 99, 71, 1)\n  Copy   \u0026lt;p style=\u0026#34;background-color:rgb(60, 179, 113);\u0026#34;\u0026gt;rgb(60, 179, 113)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:rgb(255, 165, 0);\u0026#34;\u0026gt;rgb(255, 165, 0)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:rgb(106, 90, 205);\u0026#34;\u0026gt;rgb(106, 90, 205)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:rgb(60, 60, 60);\u0026#34;\u0026gt;rgb(60, 60, 60)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:rgb(100, 100, 100);\u0026#34;\u0026gt;rgb(100, 100, 100)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:rgb(140, 140, 140);\u0026#34;\u0026gt;rgb(140, 140, 140)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:rgb(180, 180, 180);\u0026#34;\u0026gt;rgb(180, 180, 180)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:rgb(220, 220, 220);\u0026#34;\u0026gt;rgb(220, 220, 220)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:rgba(255, 99, 71, 0);\u0026#34;\u0026gt;rgba(255, 99, 71, 0)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:rgba(255, 99, 71, 0.2);\u0026#34;\u0026gt;rgba(255, 99, 71, 0.2)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:rgba(255, 99, 71, 0.4);\u0026#34;\u0026gt;rgba(255, 99, 71, 0.4)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:rgba(255, 99, 71, 0.6);\u0026#34;\u0026gt;rgba(255, 99, 71, 0.6)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:rgba(255, 99, 71, 0.8);\u0026#34;\u0026gt;rgba(255, 99, 71, 0.8)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:rgba(255, 99, 71, 1);\u0026#34;\u0026gt;rgba(255, 99, 71, 1)\u0026lt;/p\u0026gt;    HEX #3cb371\n#ffa500\n#6a5acd\n#404040\n#686868\n#a0a0a0\n#bebebe\n#dcdcdc\n#f8f8f8\n  Copy   \u0026lt;p style=\u0026#34;background-color:#3cb371;\u0026#34;\u0026gt;#3cb371\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:#ffa500;\u0026#34;\u0026gt;#ffa500\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:#6a5acd;\u0026#34;\u0026gt;#6a5acd\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:#404040;\u0026#34;\u0026gt;#404040\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:#686868;\u0026#34;\u0026gt;#686868\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:#a0a0a0;\u0026#34;\u0026gt;#a0a0a0\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:#bebebe;\u0026#34;\u0026gt;#bebebe\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:#dcdcdc;\u0026#34;\u0026gt;#dcdcdc\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:#f8f8f8;\u0026#34;\u0026gt;#f8f8f8\u0026lt;/p\u0026gt;    HSL 调整饱和度：\nhsl(0, 100%, 50%)\nhsl(0, 80%, 50%)\nhsl(0, 60%, 50%)\nhsl(0, 40%, 50%)\nhsl(0, 20%, 50%)\nhsl(0, 0%, 50%)\n调整亮度：\nhsl(0, 100%, 0%)\nhsl(0, 100%, 25%)\nhsl(0, 100%, 50%)\nhsl(0, 100%, 75%)\nhsl(0, 100%, 90%)\nhsl(0, 100%, 100%)\n灰色阴影：\nhsl(0, 0%, 20%)\nhsl(0, 0%, 30%)\nhsl(0, 0%, 40%)\nhsl(0, 0%, 60%)\nhsl(0, 0%, 70%)\nhsl(0, 0%, 90%)\nHSLA：\nhsla(9, 100%, 64%, 0)\nhsla(9, 100%, 64%, 0.2)\nhsla(9, 100%, 64%, 0.4)\nhsla(9, 100%, 64%, 0.6)\nhsla(9, 100%, 64%, 0.8)\nhsla(9, 100%, 64%, 1)\n  Copy   \u0026lt;p\u0026gt;调整饱和度：\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:hsl(0, 100%, 50%);\u0026#34;\u0026gt;hsl(0, 100%, 50%)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:hsl(0, 80%, 50%);\u0026#34;\u0026gt;hsl(0, 80%, 50%)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:hsl(0, 60%, 50%);\u0026#34;\u0026gt;hsl(0, 60%, 50%)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:hsl(0, 40%, 50%);\u0026#34;\u0026gt;hsl(0, 40%, 50%)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:hsl(0, 20%, 50%);\u0026#34;\u0026gt;hsl(0, 20%, 50%)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:hsl(0, 0%, 50%);\u0026#34;\u0026gt;hsl(0, 0%, 50%)\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;调整亮度：\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:hsl(0, 100%, 0%);\u0026#34;\u0026gt;hsl(0, 100%, 0%)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:hsl(0, 100%, 25%);\u0026#34;\u0026gt;hsl(0, 100%, 25%)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:hsl(0, 100%, 50%);\u0026#34;\u0026gt;hsl(0, 100%, 50%)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:hsl(0, 100%, 75%);\u0026#34;\u0026gt;hsl(0, 100%, 75%)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:hsl(0, 100%, 90%);\u0026#34;\u0026gt;hsl(0, 100%, 90%)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:hsl(0, 100%, 100%);\u0026#34;\u0026gt;hsl(0, 100%, 100%)\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;灰色阴影：\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:hsl(0, 0%, 20%);\u0026#34;\u0026gt;hsl(0, 0%, 20%)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:hsl(0, 0%, 30%);\u0026#34;\u0026gt;hsl(0, 0%, 30%)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:hsl(0, 0%, 40%);\u0026#34;\u0026gt;hsl(0, 0%, 40%)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:hsl(0, 0%, 60%);\u0026#34;\u0026gt;hsl(0, 0%, 60%)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:hsl(0, 0%, 70%);\u0026#34;\u0026gt;hsl(0, 0%, 70%)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:hsl(0, 0%, 90%);\u0026#34;\u0026gt;hsl(0, 0%, 90%)\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;HSLA：\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:hsla(9, 100%, 64%, 0);\u0026#34;\u0026gt;hsla(9, 100%, 64%, 0)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:hsla(9, 100%, 64%, 0.2);\u0026#34;\u0026gt;hsla(9, 100%, 64%, 0.2)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:hsla(9, 100%, 64%, 0.4);\u0026#34;\u0026gt;hsla(9, 100%, 64%, 0.4)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:hsla(9, 100%, 64%, 0.6);\u0026#34;\u0026gt;hsla(9, 100%, 64%, 0.6)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:hsla(9, 100%, 64%, 0.8);\u0026#34;\u0026gt;hsla(9, 100%, 64%, 0.8)\u0026lt;/p\u0026gt; \u0026lt;p style=\u0026#34;background-color:hsla(9, 100%, 64%, 1);\u0026#34;\u0026gt;hsla(9, 100%, 64%, 1)\u0026lt;/p\u0026gt;    "},{"uri":"https://www.shisanshiji.com/operation-guide/hugo-githubactiongithub-pages-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/","title":"Hugo\u0026Github Action\u0026Github Pages 搭建个人博客","tags":null,"description":"","content":"介绍 大致的流程如下：\n 首先通过 Hugo 生成博客网站，并进行配置、添加内容。 然后在 Github 上创建一个 blog 仓库，并将博客源码推送到 blog 仓库的 main 分支。 接着使用 Github Action 构建出静态网站，并自动推送至 gh-pages 分支。 最后配置 Github Pages 绑定 gh-pages 分支上的内容，就可以使用生成或配置的域名进行访问。  先决条件 准备 Git（必须） 如未安装 Git，参考 Git 安装指南 进行安装。\n安装完成后，可以通过 git version 命令进行验证。\n$ git version git version 2.29.2.windows.2 如果你是第一次安装，则需要初始化 Git 用户信息。将以下内容中邮箱和名字替换为合适的值并运行。\n$ git config --global user.email \u0026#34;you@example.com\u0026#34; $ git config --global user.name \u0026#34;Your Name\u0026#34; 准备 Github 仓库（必须） 在 Github 上创建 blog 仓库，你也可以选择其他合适的名称作为博客的仓库。\n点击查看配置仓库页面  准备 Hugo（必须） 如未安装 Hugo，参考 Hugo 安装指南 进行安装。\n安装完成后，可以通过 hugo version 命令进行验证。\n$ hugo version hugo v0.89.1-B6A4AE4A+extended windows/amd64 BuildDate=2021-11-05T15:44:32Z VendorInfo=gohugoio 准备域名（可选） 部署至 Github 上以后，默认会使用 \u0026lt;username\u0026gt;.github.io 域名访问你的博客。如果你想使用自己的域名，需要购买一个域名备用。可在腾讯云、阿里云或其他域名供应商购买。\n创建博客 生成博客 使用 hugo new site blog 命令来生成博客源码仓库。\n$ hugo new site blog Congratulations! Your new Hugo site is created in C:\\Users\\Peng.Gao\\Desktop\\Blog\\blog. Just a few more steps and you are ready to go: 1. Download a theme into the same-named folder. Choose a theme from https://themes.gohugo.io/ or create your own with the \u0026#34;hugo new theme \u0026lt;THEMENAME\u0026gt;\u0026#34; command. 2. Perhaps you want to add some content. You can add single files with \u0026#34;hugo new \u0026lt;SECTIONNAME\u0026gt;\\\u0026lt;FILENAME\u0026gt;.\u0026lt;FORMAT\u0026gt;\u0026#34;. 3. Start the built-in live server via \u0026#34;hugo server\u0026#34;. Visit https://gohugo.io/ for quickstart guide and full documentation. 切换当前目录至 blog 目录，可以使用 tree 命令查看目录的结构。\n$ cd blog $ tree -L 1 . |-- archetypes |-- config.toml |-- content |-- data |-- layouts |-- static `-- themes 6 directories, 1 file 应用主题 你可以选择一个喜欢的主题应用于你的博客，此博客使用的主题为 Ace documentation。\n$ git submodule add https://github.com/vantagedesign/ace-documentation themes/ace-documentation Cloning into \u0026#39;C:/Users/Peng.Gao/Desktop/Blog/docs/themes/ace-documentation\u0026#39;... remote: Enumerating objects: 555, done. remote: Counting objects: 100% (139/139), done. remote: Compressing objects: 100% (90/90), done. remote: Total 555 (delta 57), reused 88 (delta 35), pack-reused 416 Receiving objects: 100% (555/555), 2.15 MiB | 683.00 KiB/s, done. Resolving deltas: 100% (191/191), done. warning: LF will be replaced by CRLF in .gitmodules. The file will have its original line endings in your working directory 接下来需要根据你应用主题的教程来配置 config.toml 文件，主题配置教程在刚才你寻找的主题页面上查看。\n还可以根据主题的样例去新添加一些内容，在此不过多说明。\n构建博客 配置完成后，在 blog 目录下可以使用 hugo server 启动 Web 服务器。Hugo 会构建站点内容到内存中并在检测到文件更改后重新渲染，方便在开发环境中实时预览对站点所做的更改。\n$ hugo server Start building sites … hugo v0.89.1-B6A4AE4A+extended windows/amd64 BuildDate=2021-11-05T15:44:32Z VendorInfo=gohugoio | EN -------------------+----- Pages | 18 Paginator pages | 0 Non-page files | 0 Static files | 26 Processed images | 0 Aliases | 0 Sitemaps | 1 Cleaned | 0 Built in 173 ms Watching for changes in C:\\Users\\Peng.Gao\\Desktop\\Blog\\docs\\{archetypes,content,data,layouts,static,themes} Watching for config changes in C:\\Users\\Peng.Gao\\Desktop\\Blog\\docs\\config.toml Environment: \u0026#34;development\u0026#34; Serving pages from memory Running in Fast Render Mode. For full rebuilds on change: hugo server --disableFastRender Web Server is available at http://localhost:1313/ (bind address 127.0.0.1) Press Ctrl+C to stop 如果你在远端开发，可以使用 hugo server --bind 0.0.0.0 配置绑定的网卡。 如果你想更换端口号，也可以使用 hugo server -p 80 配置监听端口号。 如果在调试阶段需要输出处于草稿状态的文章（通过在文章注释中添加 draft: true 配置），则需要使用 hugo server -D 来渲染草稿。\n想了解更多的选项，运行 hugo --help 来查看它们的说明。\n预览效果满意后，可以使用 hugo 命令进行构建。\n$ hugo Start building sites … hugo v0.89.1-B6A4AE4A+extended windows/amd64 BuildDate=2021-11-05T15:44:32Z VendorInfo=gohugoio | EN -------------------+----- Pages | 18 Paginator pages | 0 Non-page files | 0 Static files | 26 Processed images | 0 Aliases | 0 Sitemaps | 1 Cleaned | 0 Total in 200 ms 构建完成后，再观察 blog 目录，会发现出现了新的目录为 public，这个目录就是我们构建出来的静态网站，通过 tree 命令观察 public，就是一个静态页面的结构。\n$ tree -L 1 public/ public/ |-- 404.html |-- categories |-- css |-- img |-- index.html |-- index.json |-- js |-- learn-notes |-- lib |-- operation-guide |-- plugins |-- sitemap.xml |-- tags `-- webfonts 10 directories, 4 files 部署至 Github 推送博客源码 现在，我们就可以将 blog 目录中的源码推送至 Github 远程仓库的 main 分支了。\n但在推送前，应该还需要忽略一些文件。思考一下介绍时所描述的大致步骤，你的博客源码是存储在 main 分支的，经过自动构建才会最新生成的 public 文件中的内容推送至 gh-pages 分支，我们并不需要将 public 目录推送至 main 分支，因此需要忽略 public 目录。此外还可能需要忽略一些其他的文件或目录，比如启动 Web 服务时所生成的 .hugo_build.lock 文件和 resources 目录，或者由编辑器产生的本地配置目录及文件。以下是我在 .gitignore 文件中忽略的内容，仅供参考。\n*.lock *.vscode *.log *.idea resources/ public/ 添加完 .gitignore 文件以后，你可以添加 Github 远程仓库并推送至 main 分支。\n$ git init $ git add . $ git commit -m \u0026#34;init\u0026#34; $ git branch -M main $ git remote add origin https://github.com/jugggao/blog.git $ git push -u origin main  注意\n需要更换远程仓库 URL 中的名称为你的 Github 用户名。  使用 Github Action 自动构建 我们将博客源码上传至 main 分支之后，就需要通过 Github Action 进行自动构建了，并将生成的 public 目录中的内容推送至 gh-pages 分支。\n在 blog 目录下新建 .github/workflows/gh-pages.yml 文件，文件内容如下。\nname: Github Pages on: push: branches: - main jobs: deploy: runs-on: ubuntu-latest steps: - name: Checkout uses: actions/checkout@v2 with: submodules: true fetch-depth: 0 - name: Read .env id: hugo-version run: |. ./.env echo \u0026#34;::set-output name=HUGO_VERSION::${HUGO_VERSION}\u0026#34; - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#39;${{ steps.hugo-version.outputs.HUGO_VERSION }}\u0026#39; extended: true - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: github_token: ${{ secrets.ACTIONS_TOKEN }} publish_branch: gh-pages publish_dir: ./public cname: www.shisanshiji.com user_name: \u0026#39;jugggao\u0026#39; user_email: \u0026#39;jugg.gao@qq.com\u0026#39; commit_message: ${{ github.event.head_commit.message }} enable_jekyll: false allow_empty_commit: true 此 Github Action 的动作如下：\n 通过 on.push.branches: ['main'] 指定了只有在推送至 main 分支时才会触发此 Action。 Checkout 阶段进行拉取代码，包括子模块中的代码（上面你克隆的主题代码仓库）。 Read .env 阶段会读取当前目录中的 .env 文件中的 HUGO_VERSION 的值，并配置为当前 ACTION 的环境变量。 Setup hugo 阶段会根据刚才配置的 HUGO_VERSION 的版本号配置 Hugo 环境。 Build 阶段会进行源码构建，构建的静态网站存储在 public 目录。 Deploy 阶段通过 secrets.ACTIONS_TOKEN 值进行认证，认证过后再将构建的 public 目录中的内容推送到 gh-pages 分支。  注意\n 需要替换 Deploy 阶段 with.user_name 与 with.user_email 的值。 如果你不希望每次都拉取应用主题仓库的最新代码，可以将 Checkout 阶段的 with.submodules 的值改为 False。 如果你使用 Github 提供的默认域名，则需要删除 with.cname 这一行配置。   你会发现在推送之前还需要两个操作：\n 创建 .env 文件，并指定 Hugo 版本。 生成 Github Token 并在 blog 仓库中配置。  首先，在 blog 目录下 .env 文件，内容如下所示。你还可以将版本替换为你本地正在使用的版本以避免不确定的错误。\nHUGO_VERSION=0.89.1 然后，在 Github 中点击用户头像依次点击「Settings」 -\u0026gt; 「Developer settings」-\u0026gt;「Personal access tokens」-\u0026gt;「Generate new token」 来生成 Token。\n点击查看生成 Token 配置页面  最后，回到你的 blog 仓库，点击「Settings」-\u0026gt;「Secrets」-\u0026gt;「New repository secret」 添加刚才生成的 Token。名称需要和 gh-pages.yml 中引用的 ACTIONS_TOKEN 环境变量保持一致。\n点击查看添加 Token 配置页面  准备完成之后，将新添加的文件推送至远程仓库。\n$ git add . $ git commit -m \u0026#34;添加 Github Action 相关文件\u0026#34; $ git push -u origin main 这时，你可以在 blog 仓库页面中点击「Actions」观察 Wrokflows 的运行状况。如果发生错误，可以对每个阶段进行展开查看运行日志进行排查。\n点击查看 Github Action 运行页面  Github Action 运行成功后，你会发现在 blog 仓库中新增了 gh-pages 分支，分支的内容正是之前我们手动构建时生成的 public 目录下静态网站。\n配置 Github Pages 在 blog 仓库页面中依次点击「Settings」-\u0026gt;「Pages」。确定你开启了 Pages 功能并一切正常。\n点击查看 Github Pages 配置页面  如果你之前事前准备了自定义域名，可以参考 Github 官方文档 说明一步步配置自定义域名。配置完成后，可以勾选「Enforce HTTPS」 选项并由 Github 自动为你的域名颁发 SSL 证书。\n验证博客访问 最后，在浏览器中输入你的博客网址来验收成果。\n参考  GitHub Pages Documentation Hugo+GitHub Action+Github Pages搭建个人博客 Ace documentation  "},{"uri":"https://www.shisanshiji.com/learn-notes/","title":"学习笔记","tags":null,"description":"","content":"入门到放弃或从入门到入土。 HTML   CSS    "},{"uri":"https://www.shisanshiji.com/learn-notes/css/","title":"CSS","tags":null,"description":"","content":"入门到放弃还是从入门到入土。 "},{"uri":"https://www.shisanshiji.com/operation-guide/","title":"操作指南","tags":null,"description":"","content":"好记性不如烂笔头。 Hugo\u0026amp;Github Action\u0026amp;Github Pages 搭建个人博客    "},{"uri":"https://www.shisanshiji.com/categories/","title":"Categories","tags":null,"description":"","content":""},{"uri":"https://www.shisanshiji.com/tags/","title":"Tags","tags":null,"description":"","content":""},{"uri":"https://www.shisanshiji.com/","title":"十三时记","tags":null,"description":"","content":"无他，惟手熟尔。 分类   学习笔记  终身学习，必有回响      操作指南  软件配置、工具使用等     "}]